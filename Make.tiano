#
# Make.tiano
# Common Makefile options for rEFInd using TianoCore EDK2
#

# This program is licensed under the terms of the GNU GPL, version 3,
# or (at your option) any later version.
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

HOSTARCH        = $(shell uname -m | sed s,i[3456789]86,ia32,)
ARCH            ?= $(HOSTARCH)

# Note: IA64 options are untested; taken from Debian's rEFIt package.
ifeq ($(ARCH),ia64)
  # EFI specs allows only lower floating point partition to be used
  ARCH_C_CFLAGS  = -frename-registers -mfixed-range=f32-f127
  # TODO: Add ARCHDIR and FILENAME_CODE as appropriate
endif

ifeq ($(ARCH),ia32)
  ARCH_C_FLAGS = -m32 -DEFI32 -malign-double
  ARCHDIR = Ia32
  UC_ARCH = IA32
  FILENAME_CODE = ia32
  LD_CODE = elf_i386
endif

ifeq ($(ARCH),x86_64)
  ARCH_C_FLAGS = "-DEFIAPI=__attribute__((ms_abi))" -DEFIX64 -mcmodel=large -m64 -mno-red-zone 
  ARCHDIR = X64
  UC_ARCH = X64
  FILENAME_CODE = x64
  LD_CODE = elf_x86_64
endif

ifeq ($(ARCH),aarch64)
  ARCH_C_FLAGS = -DEFIAARCH64 -mcmodel=large
  ARCHDIR = AArch64
  UC_ARCH = AARCH64
  FILENAME_CODE = aa64
  LD_CODE = aarch64elf
endif

#EDK2BASE = /usr/local/UDK2014/MyWorkSpace
#EDK2BASE = /usr/local/EDK2/tianocore-edk2
#ENTRYPOINT=_ModuleEntryPoint
ENTRYPOINT=efi_main

# Below file defines TARGET (RELEASE or DEBUG) and TOOL_CHAIN_TAG (GCC44, GCC45, GCC46, or GCC47)
include $(EDK2BASE)/Conf/target.txt

INCLUDE_DIRS    = -I $(EDK2BASE)/MdePkg \
                  -I $(EDK2BASE)/MdePkg/Include \
		  -I $(EDK2BASE)/MdeModulePkg/ \
                  -I $(EDK2BASE)/MdeModulePkg/Include \
                  -I $(EDK2BASE)/IntelFrameworkPkg/Include \
                  -I $(EDK2BASE)/MdePkg/Include/$(ARCHDIR) \
		  -I .. \
		  -I ../refind \
		  -I ../libeg \
		  -I ../include \
		  -I ../mok

OPTIMFLAGS      += -fno-strict-aliasing -Wno-address -Os
DEBUGFLAGS      = -Wall -Wno-missing-braces -Wno-array-bounds -ffunction-sections -fdata-sections
CFLAGS          = $(OPTIMFLAGS) -g -fshort-wchar -fno-stack-protector $(DEBUGFLAGS) -c

LDSCRIPT = $(EDK2BASE)/BaseTools/Scripts/gcc4.4-ld-script

LDFLAGS         = -nostdlib -n -q --gc-sections --script=$(EDK2BASE)/BaseTools/Scripts/gcc4.4-ld-script \
                  --entry $(ENTRYPOINT) -u $(ENTRYPOINT) -m $(LD_CODE)

%.obj: %.c
	$(CC) $(ARCH_C_FLAGS) $(CFLAGS) $(INCLUDE_DIRS) -DNO_BUILTIN_VA_FUNCS -D__MAKEWITH_TIANO -c $< -o $@


